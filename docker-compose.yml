version: '3.8'

networks:
  strem2jelly_network:  # Define a shared network
    driver: bridge

services:
  jellyfin:
    image: jellyfin/jellyfin
    container_name: strem2jelly-jellyfin
    user: root
    ports:
      - "8096:8096"
    networks:
      - strem2jelly_network
    volumes:
      - ${JELLYFIN_CONFIG_PATH}:/config
      - ${JELLYFIN_CACHE_PATH}:/cache
      - ${JELLYFIN_MEDIA_PATH}:/media
    restart: unless-stopped

  stremio:
    image: stremio/server:v4.20.8
    container_name: strem2jelly-stremio
    networks:
      - strem2jelly_network
    ports:
      - "11470:11470"
      - "11471:11471"
    volumes:
      - ./stremio-config:/root/.stremio-server
    environment:
      - NODE_ENV=production
      - STREMIO_TRANSCODING_SERVER_URL=http://127.0.0.1:11470
    user: root
    restart: unless-stopped

  telegram-bot:
    build: ./strem2jelly
    container_name: strem2jelly-tlg-bot
    networks:
      - strem2jelly_network
    user: root
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - ADMIN_USERS=${ADMIN_USERS}
      - JELLYFIN_API_URL=${JELLYFIN_API_URL}
      - JELLYFIN_API_KEY=${JELLYFIN_API_KEY}
      - JELLYFIN_USER_ID=${JELLYFIN_USER_ID}
      - TELEGRAM_API_ID=${TELEGRAM_API_ID}
      - TELEGRAM_API_HASH=${TELEGRAM_API_HASH}
      - PHONE_NUMBER=${PHONE_NUMBER}
      - MONGODB_URI=${MONGODB_URI}
      - MEDIA_FOLDER_PATH=${JELLYFIN_MEDIA_PATH}
    volumes:
      - ${MEDIA_FOLDER_PATH}:${MEDIA_FOLDER_PATH}
    restart: unless-stopped

  nginx:
    image: nginx:latest
    container_name: strem2jelly-nginx
    networks:
      - strem2jelly_network
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/html:/usr/share/nginx/html:ro
      - /etc/letsencrypt:/etc/letsencrypt
    restart: unless-stopped

  # letsencrypt:
  #   image: nginxproxy/acme-companion
  #   container_name: strem2jelly-letsencrypt
  #   networks:
  #     - strem2jelly_network
  #   environment:
  #     - DEFAULT_EMAIL=${LETSENCRYPT_EMAIL}
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     - ./nginx-proxy/certs:/etc/nginx/certs
  #     - ./nginx-proxy/vhost.d:/etc/nginx/vhost.d
  #     - ./nginx-proxy/html:/usr/share/nginx/html
  #   depends_on:
  #     - reverse-proxy
  #   restart: unless-stopped